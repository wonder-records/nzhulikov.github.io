@import "libs/skel";

@include skel-breakpoints((
  xlarge: '(max-width: 1680px)',
  large: '(max-width: 1280px)',
  medium: '(max-width: 980px)',
  small: '(max-width: 736px)',
  xsmall: '(max-width: 480px)'
));

/* Basic */

@-ms-viewport {
  width: device-width;
}

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

.tiles {
  margin: 1.5em 1.5em 1.5em -1.5em;
  padding-left: 1.5em;
}

.tile-wrapper {
  position: relative;
  height: 300px;
  padding-left: 1.5em;
  padding-bottom: 1.5em;
  text-overflow: ellipsis;
}

.tile-cover {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  height: 100%;
}

.tile-panel {

  position: relative;
  height: 100%;

  background-image: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.7));

  &:hover {

    .tile-text {
      opacity: 0.3;
    }

    &.play:before {
      opacity: 1;
    }

    &.pause:before {
      opacity: 1;
    }
  }

  @include breakpoint(small) {
    background: rgba(0,0,0,0.2);

    .tile-text {
      opacity: 1;
    }
  }
}

.play:before {
  @include vendor('transition', 'opacity 0.5s ease');
  opacity: .4;
  content: "\f04b";
  font-family: FontAwesome;
  font-style: normal;
  font-weight: normal;
  text-decoration: inherit;
  /*--adjust as necessary--*/
  position: absolute;
  color: white;
  font-size: 4em;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.pause:before {
  @extend .play;
  content: "\f04c";
}

.tile-text {
  @include vendor('transition', 'opacity 0.5s ease');

  position: absolute;
  width: 100%;
  left: 0px;
  bottom: 0px;
  padding: 0 20px;

  h1, h2, h3 {
    font-size: 1em;
    letter-spacing: 0;
    // white-space: nowrap;
    // overflow: hidden !important;
    // text-overflow: ellipsis;
  }

  p {
    font-size: 1em;
    // overflow-y: hidden !important;
    // text-overflow: ellipsis;
  }
}
